name: Rewrite Candidate Resume (Gemini)
description: Use Google Gemini to tailor a candidate's resume to a specific job description.

inputs:
  GOOGLE_API_KEY:
    description: Google API Key For Gemini
    required: true
  GEMINI_MODEL:
    description: Gemini Model
    required: true
    default: gemini-2.0-flash
  RESUME_TEXT:
    description: Resume Text
    required: true
  RESUME_MIME_TYPE:
    description: Resume Mime Type
    required: true
    default: text/plain
  JOB_DESCRIPTION:
    description: Job Description
    required: true
  JOB_DESCRIPTION_MIME_TYPE:
    description: Job Description Mime Type
    required: true
    default: text/plain
  PERSONA:
    description: The persona to use for the system instruction. This is used to set the tone and style of the response.
    required: true
    default: Act as an expert technical recruiter and career coach with a previous career in software engineering who assists candidates with tailoring their resume for a specific job application.

outputs:
  RAW:
    description: The raw response generated by Gemini.
    value: ${{ steps.gemini-rewrite.outputs.RAW }}
  RESPONSE_TEXT:
    description: 'The text response generated by Gemini which was instructed to output JSON with they keys: score, explanation, deficiencies, strengths, and recommendations.'
    value: ${{ steps.gemini-rewrite.outputs.RESPONSE_TEXT }}

runs:
  using: composite
  steps:
    - name: Tailor Resume
      id: gemini-rewrite
      uses: actions/github-script@v7
      env:
        GOOGLE_API_KEY: ${{ inputs.GOOGLE_API_KEY }}
        GEMINI_MODEL: ${{ inputs.GEMINI_MODEL }}
        RESUME_MIME_TYPE: ${{ inputs.RESUME_MIME_TYPE }}
        RESUME_TEXT: ${{ inputs.RESUME_TEXT }}
        CAREER_GROWTH_KEYWORDS: ${{ inputs.CAREER_GROWTH_KEYWORDS }}
        JOB_DESCRIPTION_MIME_TYPE: ${{ inputs.JOB_DESCRIPTION_MIME_TYPE }}
        JOB_DESCRIPTION: ${{ inputs.JOB_DESCRIPTION }}
        PERSONA: ${{ inputs.PERSONA }}
      with:
        script: |
          const payload = {
            system_instruction: {
              parts: {
                text: process.env.PERSONA
              }
            },
            contents: [
              {
                parts: [
                  {
                    text: `The following files have been provided:
                    - Resume
                    - Job Description

                    Today's date is ${new Date().toLocaleDateString()}.

                    Generate an HTML formatted resume adhering to the following guidelines:
                    - The resume should be tailored to the job description provided.
                    - You may reword the resume to make it more appealing but do NOT add any new, or misleading information.
                    - The resume should highlight the candidate's skills and experience that are relevant to the job description.
                    - The resume should fit within a single page.
                    - Any experience older than 10 years must be included a separate section immedaitely after the section outlining the most recent experience and only list the company name, job title, and dates of employment.
                    - Any candidaate summary may be omitted or shortened to adhear to best practices when applying for a role within the employers industry.
                    - Any education section may be omitted when older than 5 years, or when it adhears to best practices when applying for a role within the employers industry.
                    - The graduation date should be omitted from the education section.
                    - Any experience or skills that are not directly relevant to the job description should be de-emphasized.
                    - Include a minimal header with the candidate's name and contact information.
                    - The resume should be styled using CSS to enhance its appearance.
                    - The resume should be formatted in a way that is easy to read and visually appealing.
                    - The HTML should be well-structured, valid, and parsable and adhear to modern web standards.
                    - Include an HTML comment at the top of the file with the following information:
                      - The name of the model used to generate the resume (${process.env.GEMINI_MODEL}).
                      - The date and time when the resume was generated.
                      - A disclaimer stating that the resume was modified by an AI model and was reviewed by the candidate, mentioned by name, prior to submission.`
                  },
                  {
                    inline_data: {
                      mime_type: process.env.RESUME_MIME_TYPE,
                      data: Buffer.from(process.env.RESUME_TEXT).toString('base64')
                    }
                  },
                  {
                    inline_data: {
                      mime_type: process.env.JOB_DESCRIPTION_MIME_TYPE,
                      data: Buffer.from(process.env.JOB_DESCRIPTION).toString('base64')
                    }
                  }
                ]
              }
            ]
          };

          const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/${process.env.GEMINI_MODEL}:generateContent?key=${process.env.GOOGLE_API_KEY}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
          });
          const data = await response.json();
          console.log(JSON.stringify(data, null, 2));
          let resultText = data.candidates[0].content.parts[0].text;
          resultText = resultText.replace(/```html|```/g, '').trim();

          console.log('Gemini response:', resultText);

          core.setOutput('RAW', JSON.stringify(data, null, 2));
          core.setOutput('RESPONSE_TEXT', resultText);
